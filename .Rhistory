}else{
gsDesArgsAdj = within(gsDesArgs, {
k = nrow(trialIter)
timing = seq(0, 1, l = k + 1)[-1]
})
if(gsDesArgsAdj$k > 1){
gsPlanAdj = do.call(gsDesign, gsDesArgsAdj)
trialIter = cbind(trialIter, nominalP = pnorm(gsPlanAdj$lower$bound))
}else{
trialIter = data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time', nominalP = 0.025)
}
}
analysisNum = 0
trialStopped = FALSE
while(!trialStopped){
analysisNum = analysisNum + 1
analysisDate = trialIter[analysisNum, tcal]
censTrial = as.data.table(trial)
cens = censTrial[date > analysisDate, survt := Inf]
cens = cens[date > analysisDate, testResult := 0]
if(sum(cens$testResult[cens$arm=='vaccine']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
if(sum(cens$testResult[cens$arm=='control']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
infectionMod <- try(coxph(Surv(rep(0,nrow(cens)), cens$survt, cens$testResult == 1) ~ cens$arm == 'vaccine',
frailty(cens$region, distribution = 'gamma', sparse = FALSE)), silent = TRUE)
useInfectionMod <- !inherits(infectionMod, 'try-error')
trialIter[analysisNum, rawPinfection := summary(infectionMod)$logtest['pvalue']]
trialIter[analysisNum, logHRinfection := summary(infectionMod)$coefficients[,1]]
trialIter[analysisNum, vaccGoodInfection := rawPinfection <  nominalP & logHRinfection < 0]
trialIter[analysisNum, vaccBadInfection := rawPinfection < nominalP & logHRinfection > 0]
trialIter$vaccCases[analysisNum] <- nrow(cens[arm=='vaccine' & testResult==1 & date <= trialIter$tcal[analysisNum],])
trialIter$contCases[analysisNum] <- nrow(cens[arm=='control' & testResult==1 & date <= trialIter$tcal[analysisNum],])
earlyStop <- trialIter[analysisNum, vaccGoodInfection | vaccBadInfection]
if(any(earlyStop, na.rm=T)) trialStopped <- T
if(analysisNum==nrow(trialIter)) trialStopped <- T
}
trialIter<-trialIter[complete.cases(trialIter),]
dat<-trialIter[max(nrow(trialIter)), `tcal`]
dat<-as.character(dat[[1]][1])
contInfs[i] <- trialIter[max(nrow(trialIter)),`contCases`]
vaccInfs[i] <- trialIter[max(nrow(trialIter)), `vaccCases`]
pvec[i] <- trialIter[max(nrow(trialIter)), `rawPinfection`]
date[i] <- dat
}
out<-data.table(contMean = mean(contInfs),
contMedian = median(contInfs),
vaccMean = mean(vaccInfs),
vaccMedian = median(vaccInfs),
power = mean(pvec < 0.05),
meanDate = mean(as.Date(date)),
medianDate = median(as.Date(date)))
out
})
set.seed(628496)
gsDesArgs = list(k=5,
test.type = 2,
alpha = 0.025,
beta = 0.1,
timing = seq(0, 1, l = 6)[-1])
gsPlan = do.call(gsDesign, gsDesArgs)
cumRates = assumedRate*c(1,(1-vaccEff))
fixedSamp = nBinomial(p1 = cumRates[1], p2 = cumRates[2], outtype = 2, beta = 0.1)
fixed = sum(fixedSamp*cumRates)
contInfs = vaccInfs = date = pvec = as.numeric(list())
analyzeTrial(parms)
set.seed(628496)
gsDesArgs = list(k=5,
test.type = 2,
alpha = 0.025,
beta = 0.1,
timing = seq(0, 1, l = 6)[-1])
gsPlan = do.call(gsDesign, gsDesArgs)
cumRates = assumedRate*c(1,(1-vaccEff))
fixedSamp = nBinomial(p1 = cumRates[1], p2 = cumRates[2], outtype = 2, beta = 0.1)
fixed = sum(fixedSamp*cumRates)
contInfs = vaccInfs = date = pvec = as.numeric(list())
for(i in 1:iter){
immuneDate = as.Date(startDate) + 30
trial<-makePop(paho, parms)
trial<-mergeData(trial, paho, parms)
trial<-simInf(trial,parms)
trial<-symptomatic(trial,parms)
trial<-persistence(trial,parms)
infDays = sort(trial$date[trial$testResult == 1])
trialIter = data.table(events = round(gsPlan$timing*fixed))
trialIter[,tcal := infDays[events]]
trialIter <- trialIter[!is.na(tcal)]
trialIter$trigger = 'events'
if(nrow(trialIter) < gsPlan$k){
trialIter = rbind(trialIter, data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time'))
}
if(nrow(trialIter) == gsPlan$k){
trialIter = cbind(trialIter, nominalP = pnorm(gsPlan$lower$bound))
}else{
gsDesArgsAdj = within(gsDesArgs, {
k = nrow(trialIter)
timing = seq(0, 1, l = k + 1)[-1]
})
if(gsDesArgsAdj$k > 1){
gsPlanAdj = do.call(gsDesign, gsDesArgsAdj)
trialIter = cbind(trialIter, nominalP = pnorm(gsPlanAdj$lower$bound))
}else{
trialIter = data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time', nominalP = 0.025)
}
}
analysisNum = 0
trialStopped = FALSE
while(!trialStopped){
analysisNum = analysisNum + 1
analysisDate = trialIter[analysisNum, tcal]
censTrial = as.data.table(trial)
cens = censTrial[date > analysisDate, survt := Inf]
cens = cens[date > analysisDate, testResult := 0]
if(sum(cens$testResult[cens$arm=='vaccine']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
if(sum(cens$testResult[cens$arm=='control']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
infectionMod <- try(coxph(Surv(rep(0,nrow(cens)), cens$survt, cens$testResult == 1) ~ cens$arm == 'vaccine',
frailty(cens$region, distribution = 'gamma', sparse = FALSE)), silent = TRUE)
useInfectionMod <- !inherits(infectionMod, 'try-error')
trialIter[analysisNum, rawPinfection := summary(infectionMod)$logtest['pvalue']]
trialIter[analysisNum, logHRinfection := summary(infectionMod)$coefficients[,1]]
trialIter[analysisNum, vaccGoodInfection := rawPinfection <  nominalP & logHRinfection < 0]
trialIter[analysisNum, vaccBadInfection := rawPinfection < nominalP & logHRinfection > 0]
trialIter$vaccCases[analysisNum] <- nrow(cens[arm=='vaccine' & testResult==1 & date <= trialIter$tcal[analysisNum],])
trialIter$contCases[analysisNum] <- nrow(cens[arm=='control' & testResult==1 & date <= trialIter$tcal[analysisNum],])
earlyStop <- trialIter[analysisNum, vaccGoodInfection | vaccBadInfection]
if(any(earlyStop, na.rm=T)) trialStopped <- T
if(analysisNum==nrow(trialIter)) trialStopped <- T
}
trialIter<-trialIter[complete.cases(trialIter),]
dat<-trialIter[max(nrow(trialIter)), `tcal`]
dat<-as.character(dat[[1]][1])
contInfs[i] <- trialIter[max(nrow(trialIter)),`contCases`]
vaccInfs[i] <- trialIter[max(nrow(trialIter)), `vaccCases`]
pvec[i] <- trialIter[max(nrow(trialIter)), `rawPinfection`]
date[i] <- dat
}
immuneDate = as.Date(startDate) + 30
trial<-makePop(paho, parms)
trial<-mergeData(trial, paho, parms)
trial<-simInf(trial,parms)
trial<-symptomatic(trial,parms)
trial<-persistence(trial,parms)
infDays = sort(trial$date[trial$testResult == 1])
trialIter = data.table(events = round(gsPlan$timing*fixed))
trialIter[,tcal := infDays[events]]
trialIter <- trialIter[!is.na(tcal)]
trialIter$trigger = 'events'
if(nrow(trialIter) < gsPlan$k){
trialIter = rbind(trialIter, data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time'))
}
trialIter = rbind(trialIter, data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time'))
gsDesArgsAdj = within(gsDesArgs, {
k = nrow(trialIter)
timing = seq(0, 1, l = k + 1)[-1]
})
trialIter = data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time', nominalP = 0.025)
analysisNum = 0
trialStopped = FALSE
while(!trialStopped){
analysisNum = analysisNum + 1
analysisDate = trialIter[analysisNum, tcal]
censTrial = as.data.table(trial)
cens = censTrial[date > analysisDate, survt := Inf]
cens = cens[date > analysisDate, testResult := 0]
if(sum(cens$testResult[cens$arm=='vaccine']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
if(sum(cens$testResult[cens$arm=='control']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
infectionMod <- try(coxph(Surv(rep(0,nrow(cens)), cens$survt, cens$testResult == 1) ~ cens$arm == 'vaccine',
frailty(cens$region, distribution = 'gamma', sparse = FALSE)), silent = TRUE)
useInfectionMod <- !inherits(infectionMod, 'try-error')
trialIter[analysisNum, rawPinfection := summary(infectionMod)$logtest['pvalue']]
trialIter[analysisNum, logHRinfection := summary(infectionMod)$coefficients[,1]]
trialIter[analysisNum, vaccGoodInfection := rawPinfection <  nominalP & logHRinfection < 0]
trialIter[analysisNum, vaccBadInfection := rawPinfection < nominalP & logHRinfection > 0]
trialIter$vaccCases[analysisNum] <- nrow(cens[arm=='vaccine' & testResult==1 & date <= trialIter$tcal[analysisNum],])
trialIter$contCases[analysisNum] <- nrow(cens[arm=='control' & testResult==1 & date <= trialIter$tcal[analysisNum],])
earlyStop <- trialIter[analysisNum, vaccGoodInfection | vaccBadInfection]
if(any(earlyStop, na.rm=T)) trialStopped <- T
if(analysisNum==nrow(trialIter)) trialStopped <- T
}
analysisNum = analysisNum + 1
analysisDate = trialIter[analysisNum, tcal]
censTrial = as.data.table(trial)
cens = censTrial[date > analysisDate, survt := Inf]
cens = cens[date > analysisDate, testResult := 0]
tail(cens)
str(cens$survt)
if(sum(cens$testResult[cens$arm=='vaccine']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
if(sum(cens$testResult[cens$arm=='vaccine']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(max(cens$date[cens$testResult==1]))-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
tail(cens)
str(cens$survt)
parms
Surv(rep(0,nrow(cens)), cens$survt, cens$testResult == 1)
coxph(Surv(rep(0,nrow(cens)), cens$survt, cens$testResult == 1) ~ cens$arm == 'vaccine',
frailty(cens$region, distribution = 'gamma', sparse = FALSE)), silent = TRUE
coxph(Surv(rep(0,nrow(cens)), cens$survt, cens$testResult == 1) ~ cens$arm == 'vaccine',
frailty(cens$region, distribution = 'gamma', sparse = FALSE)
)
warnings()
trial<-makePop(paho, parms)
trial<-mergeData(trial, paho, parms)
trial<-simInf(trial,parms)
trial<-symptomatic(trial,parms)
trial<-persistence(trial,parms)
trial
max(trial$date)
infDays = sort(trial$date[trial$testResult == 1])
trialIter = data.table(events = round(gsPlan$timing*fixed))
trialIter[,tcal := infDays[events]]
analyzeTrial <- function(parms, browse = F) with(parms, {
if(browse) browser()
set.seed(628496)
gsDesArgs = list(k=5,
test.type = 2,
alpha = 0.025,
beta = 0.1,
timing = seq(0, 1, l = 6)[-1])
gsPlan = do.call(gsDesign, gsDesArgs)
cumRates = assumedRate*c(1,(1-vaccEff))
fixedSamp = nBinomial(p1 = cumRates[1], p2 = cumRates[2], outtype = 2, beta = 0.1)
fixed = sum(fixedSamp*cumRates)
contInfs = vaccInfs = date = pvec = as.numeric(list())
for(i in 1:iter){
immuneDate = as.Date(startDate) + 30
trial<-makePop(paho, parms)
trial<-mergeData(trial, paho, parms)
trial<-simInf(trial,parms)
trial<-symptomatic(trial,parms)
trial<-persistence(trial,parms)
infDays = sort(trial$date[trial$testResult == 1])
trialIter = data.table(events = round(gsPlan$timing*fixed))
trialIter[,tcal := infDays[events]]
trialIter <- trialIter[!is.na(tcal)]
trialIter$trigger = 'events'
if(nrow(trialIter) < gsPlan$k){
trialIter = rbind(trialIter, data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time'))
}
if(nrow(trialIter) == gsPlan$k){
trialIter = cbind(trialIter, nominalP = pnorm(gsPlan$lower$bound))
}else{
gsDesArgsAdj = within(gsDesArgs, {
k = nrow(trialIter)
timing = seq(0, 1, l = k + 1)[-1]
})
if(gsDesArgsAdj$k > 1){
gsPlanAdj = do.call(gsDesign, gsDesArgsAdj)
trialIter = cbind(trialIter, nominalP = pnorm(gsPlanAdj$lower$bound))
}else{
trialIter = data.table(events = sum(trial$testResult), tcal = max(trial$date), trigger = 'end time', nominalP = 0.025)
}
}
analysisNum = 0
trialStopped = FALSE
while(!trialStopped){
analysisNum = analysisNum + 1
analysisDate = trialIter[analysisNum, tcal]
censTrial = as.data.table(trial)
cens = censTrial[date > analysisDate, survt := Inf]
cens = cens[date > analysisDate, testResult := 0]
if(sum(cens$testResult[cens$arm=='vaccine']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(maxEndDate)-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(maxEndDate)-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
if(sum(cens$testResult[cens$arm=='control']) == 0){
standInV <- data.table(date = trialIter$tcal[analysisNum], arm = 'vaccine', survt = as.Date(maxEndDate)-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInV, fill=TRUE)
standInC <- data.table(date = trialIter$tcal[analysisNum], arm = 'control', survt = as.Date(maxEndDate)-as.Date(immuneDate), testResult = 1)
cens <- rbind(cens, standInC, fill=TRUE)
}
infectionMod <- try(coxph(Surv(rep(0,nrow(cens)), cens$survt, cens$testResult == 1) ~ cens$arm == 'vaccine',
frailty(cens$region, distribution = 'gamma', sparse = FALSE)), silent = TRUE)
useInfectionMod <- !inherits(infectionMod, 'try-error')
trialIter[analysisNum, rawPinfection := summary(infectionMod)$logtest['pvalue']]
trialIter[analysisNum, logHRinfection := summary(infectionMod)$coefficients[,1]]
trialIter[analysisNum, vaccGoodInfection := rawPinfection <  nominalP & logHRinfection < 0]
trialIter[analysisNum, vaccBadInfection := rawPinfection < nominalP & logHRinfection > 0]
trialIter$vaccCases[analysisNum] <- nrow(cens[arm=='vaccine' & testResult==1 & date <= trialIter$tcal[analysisNum],])
trialIter$contCases[analysisNum] <- nrow(cens[arm=='control' & testResult==1 & date <= trialIter$tcal[analysisNum],])
earlyStop <- trialIter[analysisNum, vaccGoodInfection | vaccBadInfection]
if(any(earlyStop, na.rm=T)) trialStopped <- T
if(analysisNum==nrow(trialIter)) trialStopped <- T
}
trialIter<-trialIter[complete.cases(trialIter),]
dat<-trialIter[max(nrow(trialIter)), `tcal`]
dat<-as.character(dat[[1]][1])
contInfs[i] <- trialIter[max(nrow(trialIter)),`contCases`]
vaccInfs[i] <- trialIter[max(nrow(trialIter)), `vaccCases`]
pvec[i] <- trialIter[max(nrow(trialIter)), `rawPinfection`]
date[i] <- dat
}
out<-data.table(contMean = mean(contInfs),
contMedian = median(contInfs),
vaccMean = mean(vaccInfs),
vaccMedian = median(vaccInfs),
power = mean(pvec < 0.05),
meanDate = mean(as.Date(date)),
medianDate = median(as.Date(date)))
out
})
analyzeTrial(parms)
params<- makeParms()
params<- expand.grid(params)
2844/4
library(tidyverse)
library(data.table)
library(mefa)
library(ggplot2)
library(scales)
# Obtain digitized PAHO Zika case numbers, by epidemiological week, from Andersen Github repo:
fileURLs<-c("https://raw.githubusercontent.com/andersen-lab/Zika-cases-PAHO/master/caribbean.csv",
"https://raw.githubusercontent.com/andersen-lab/Zika-cases-PAHO/master/central_america.csv",
"https://raw.githubusercontent.com/andersen-lab/Zika-cases-PAHO/master/south_america.csv")
PAHOdata <- as.data.frame(unlist(lapply(fileURLs,fread), recursive=FALSE))
# selecting from PAHOdata the 4 best places to be to get Zika, based on projection.
# 'susp.con.ZIKV.cases' downloaded as the year column, 'V2' is the date (mo/day)
PAHOdata <- subset(PAHOdata, select = c('Colombia', 'Ecuador', 'Mexico', 'Peru','susp.con.ZIKV.cases','V2'))
#Reformating data to remove extra row in header and to include a single date column
PAHOdata <- setnames(PAHOdata[-1,], c('susp.con.ZIKV.cases','V2'), c('year','date'))
PAHOdata[1:52,'year']<-'2016'; PAHOdata[53:nrow(PAHOdata),'year']<-2017  #if Andersen lab continues updating repo,
#may need to update this line
PAHOdata$date <- as.Date(paste(PAHOdata$date,'-',PAHOdata$year, sep=""),"%d-%b-%Y")
#These are the population sizes for the four countries identified in projections:
popSize<-c(48650000,16506000,130624000,31970000)
#Making it an infection per-capita, by region, by multiplying 4.5 (due to asymptomatic rate) and dividing by pop size
for(reg in 1:(ncol(PAHOdata)-2)){
PAHOdata[,reg]<-PAHOdata[,reg]*4.5/popSize[reg]
}
PAHOdata<-select(PAHOdata, -year) #get rid of the extra column for year
# 8 areas identified by projections within these 4 countries: 'Narino' in Colombia,'Sucumbios' in Ecuador,'Sinaloa'
# and 'Tamaulipas' in Mexico, 'Piura','Tumbes','SanMartin' and 'Ucayali' in Peru
#Only 2016 rates (first 52 weeks of data):
PAHOdata16<-PAHOdata[1:52,]
ExpectedRates<-c(0.005, 0.0755, 0.0244, 0.0028, 0.071, 0.0631, 0.001, 0.0006) #ZIKAVAT collaboration projected median rate for 2017
Rates2016<-c(sum(PAHOdata16$Colombia),
sum(PAHOdata16$Ecuador),
sum(PAHOdata16$Mexico),
sum(PAHOdata16$Mexico),
sum(PAHOdata16$Peru),
sum(PAHOdata16$Peru),
sum(PAHOdata16$Peru),
sum(PAHOdata16$Peru))
# PRF, or projectionRateFactor, scales Andersen data to represent the projected incidence rate while
# maintaining seasonal variation seen country-wide in the first wave of the epidemic
PRF <- ExpectedRates/Rates2016
# Use PRF to scale PAHO data
paho<-data.table(Narino = PAHOdata$Colombia*PRF[1], Sucumbios = PAHOdata$Ecuador*PRF[2], Sinaloa = PAHOdata$Mexico*PRF[3],
Tamaulipas = PAHOdata$Mexico*PRF[4], Piura = PAHOdata$Peru*PRF[5], Tumbes = PAHOdata$Peru*PRF[6],
SanMartin = PAHOdata$Peru*PRF[7], Ucayali = PAHOdata$Peru*PRF[8], date = PAHOdata$date)
paho$Week <- 1:nrow(paho)
#visualize
pahoPlot<-paho[1:52,] #can also plot paho for all 73 weeks.
pahoPlot<-melt.data.table(pahoPlot,id.vars = 10, measure.vars = 1:8,variable.name = "Region")
ggplot(pahoPlot, aes(x=Week, y=value, group=Region, color=Region))+geom_line() + labs(y='Rate') +
theme_classic() + scale_y_continuous(limits = c(0,.01))
PAHOdata16$Week<-1:nrow(PAHOdata16)
paho16Plot<-melt.data.table(PAHOdata16, id.vars = 6, measure.vars = 1:4, variable.name = 'Countries')
ggplot(paho16Plot, aes(x=Week,y=value, group=Countries, color=Countries)) + geom_line() + labs(y='Rate') +
theme_classic() + scale_y_continuous(labels = comma)
#save
#save(paho, file='paho.Rdata')
paho16Plot<-melt.data.table(as.data.table(PAHOdata16), id.vars = 6, measure.vars = 1:4, variable.name = 'Countries')
ggplot(paho16Plot, aes(x=Week,y=value, group=Countries, color=Countries)) + geom_line() + labs(y='Rate') +
theme_classic() + scale_y_continuous(labels = comma)
ggplot(pahoPlot, aes(x=Week, y=value, group=Region, color=Region))+geom_line() + labs(y='Rate') +
theme_classic() + scale_y_continuous(limits = c(0,.01))
64*36
2304*6
dat<-data.table(cases = c(3500,7020, 8000,
6500, 4000, 8025,
7075, 5000, 9000,
7750, 6500, 9025,
7750, 6250, 10500,
9500, 8500, 12000,
11000, 10000, 15000,
14000, 6000))
dat<-data.frame(cases = c(3500,7020, 8000,
6500, 4000, 8025,
7075, 5000, 9000,
7750, 6500, 9025,
7750, 6250, 10500,
9500, 8500, 12000,
11000, 10000, 15000,
14000, 6000))
dat$year<-1:23
head(dat)
plot(dat$year, dat$cases)
plot(dat$year, dat$cases, type = 'l')
acf(dat$cases)
pacf(dat$cases)
mod1<-arima(dat$cases, c(1,0,0))
acf(mod1)
mod1
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,1,0))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,1,1))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(0,1,1))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(0,2,1))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,2,1))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,2,0))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,2,2))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(2,2,2))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(2,2,0))
mod1<-arima(dat$cases, c(2,2,1))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(2,1,1))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(2,1,2))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(2,2,2))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,2,2))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,2,1))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1<-arima(dat$cases, c(1,2,3))
acf(mod1$residuals)
pacf(mod1$residuals)
mod1
box.test(mod1)
box.test(mod1, residuals)
library(foreach)
library(doParallel)
library(iterators)
library(gsDesign)
library(tidyverse)
library(data.table)
library(mefa)
library(survival)
source('helperFXNs.R')
source('simulationFXNs.R')
source('analyzeFXN.R')
load('paho.Rdata')
params<-makeParms()
setwd("~/Desktop/Research/Zika Paper/ZikaTrial")
source('helperFXNs.R')
source('simulationFXNs.R')
source('analyzeFXN.R')
load('paho.Rdata')
params<-makeParms()
parms<-params[1,]
analyzeTrial(parms)
source('helperFXNs.R')
source('simulationFXNs.R')
source('analyzeFXN.R')
analyzeTrial(parms)
